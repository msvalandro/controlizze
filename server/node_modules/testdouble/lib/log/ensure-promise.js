'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ensurePromise;

var _config = require('../config');

var _config2 = _interopRequireDefault(_config);

var _log = require('../log');

var _log2 = _interopRequireDefault(_log);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MESSAGES = {
  warn: 'no promise constructor is set, so this `thenResolve` or `thenReject` stubbing\nwill fail if it\'s satisfied by an invocation on the test double. You can tell\ntestdouble.js which promise constructor to use with `td.config`, like so:',
  error: 'no promise constructor is set (perhaps this runtime lacks a native Promise\nfunction?), which means this stubbing can\'t return a promise to your\nsubject under test, resulting in this error. To resolve the issue, set\na promise constructor with `td.config`, like this:'
};

function ensurePromise(level) {
  if ((0, _config2.default)().promiseConstructor == null) {
    _log2.default[level]('td.when', MESSAGES[level] + '\n\n  td.config({\n    promiseConstructor: require(\'bluebird\')\n  })');
  }
}